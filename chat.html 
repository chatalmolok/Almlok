<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>شات الملوك - غرف ومحادثات</title>
  <link rel="stylesheet" href="style.css"/>
  <style>
    .layout { display:flex; gap:10px; width:95%; max-width:1100px; margin:20px auto; }
    .sidebar { width:260px; background:#111; border:2px solid gold; border-radius:12px; padding:10px; }
    .main { flex:1; background:#111; border:2px solid gold; border-radius:12px; padding:10px; display:flex; flex-direction:column; height:75vh; }
    .rooms-list { list-style:none; padding:0; margin:0; }
    .rooms-list li { padding:8px; border-bottom:1px solid rgba(255,215,0,0.05); cursor:pointer; color:gold; }
    .rooms-list li:hover { background: rgba(255,215,0,0.06); }
    .profile-box { text-align:center; margin-bottom:10px; color:gold; }
    .messages { flex:1; overflow:auto; padding:10px; background:#000; border-radius:8px; color:gold; }
    .input-row { display:flex; gap:8px; margin-top:10px; }
    .small-btn { background:gold; border:none; padding:8px; border-radius:8px; cursor:pointer; }
    .mod-actions { margin-top:8px; display:flex; gap:6px; flex-wrap:wrap; }
  </style>
</head>
<body>
  <div class="layout">
    <div class="sidebar">
      <div class="profile-box">
        <div id="meName">...جارٍ التحميل</div>
        <div id="meRole" style="font-size:13px;color:#ddd"></div>
      </div>
      <h4 style="color:gold">الغرف العامة</h4>
      <ul id="rooms" class="rooms-list"></ul>
      <hr style="border-color:rgba(255,215,0,0.1)"/>
      <button id="createPrivateBtn" class="small-btn">محادثة خاصة جديدة</button>
      <div style="margin-top:8px"><button id="broadcastBtn" class="small-btn">إرسال رسالة عامة</button></div>
      <div class="mod-actions" id="ownerActions" style="display:none"></div>
    </div>

    <div class="main">
      <div id="roomHeader" style="padding:6px;color:gold;font-weight:bold">الغرفة: عامة</div>
      <div id="messages" class="messages"></div>
      <div class="input-row">
        <input id="msgInput" placeholder="اكتب رسالتك..." style="flex:1;padding:8px;border-radius:8px;background:#000;color:gold;border:1px solid rgba(255,215,0,0.2)"/>
        <button id="sendBtn" class="small-btn">إرسال</button>
      </div>
    </div>
  </div>

  <script type="module">
    import { auth, db, createPrivateRoom, sendMessage, listenRoomMessages, listenBroadcasts, getProfile, promoteUser, muteUser, banUser, sendBroadcast, shortName } from './script.js';
    import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-auth.js";
    import { collection, query, where, getDocs } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-firestore.js";

    const PUBLIC_ROOMS = [
      { id: 'general', name: 'الدردشة العامة' },
      { id: 'iraq', name: 'روم العراق 🇮🇶' },
      { id: 'sa', name: 'روم السعودية 🇸🇦' },
      { id: 'eg', name: 'روم مصر 🇪🇬' },
      { id: 'sy', name: 'روم سوريا 🇸🇾' },
      { id: 'lb', name: 'روم لبنان 🇱🇧' },
      { id: 'jo', name: 'روم الاردن 🇯🇴' },
      { id: 'kw', name: 'روم الكويت 🇰🇼' },
      { id: 'bh', name: 'روم البحرين 🇧🇭' },
      { id: 'ae', name: 'روم الامارات 🇦🇪' },
      { id: 'om', name: 'روم عمان 🇴🇲' },
      { id: 'qa', name: 'روم قطر 🇶🇦' },
      { id: 'left', name: 'روم اليمين 🇾🇪' },
      { id: 'west', name: 'روم المتغربين ✈️' },
    ];

    let currentRoom = 'general';
    let currentUser = null;
    let roomListener = null;

    const roomsUl = document.getElementById("rooms");
    const messagesDiv = document.getElementById("messages");
    const msgInput = document.getElementById("msgInput");
    const sendBtn = document.getElementById("sendBtn");
    const meName = document.getElementById("meName");
    const meRole = document.getElementById("meRole");
    const broadcastBtn = document.getElementById("broadcastBtn");
    const ownerActionsDiv = document.getElementById("ownerActions");

    // populate rooms
    for (const r of PUBLIC_ROOMS) {
      const li = document.createElement('li');
      li.textContent = r.name;
      li.dataset.room = r.id;
      li.addEventListener('click', () => openRoom(r.id, r.name));
      roomsUl.appendChild(li);
    }

    function openRoom(id, displayName) {
      currentRoom = id;
      document.getElementById("roomHeader").textContent = 'الغرفة: ' + displayName;
      if (roomListener) roomListener(); // unsubscribe
      messagesDiv.innerHTML = '';
      roomListener = listenRoomMessages(id, renderMessages);
    }

    function renderMessages(arr) {
      messagesDiv.innerHTML = '';
      for (const m of arr) {
        const div = document.createElement('div');
        div.className = 'message';
        div.textContent = `${shortName(m.user)}: ${m.text}`;
        if (currentUser && m.user === currentUser.email) { div.style.background='gold'; div.style.color='black'; }
        messagesDiv.appendChild(div);
      }
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    sendBtn.addEventListener('click', async () => {
      const text = msgInput.value.trim();
      if (!text || !currentUser) return;
      // role check example
      if (currentUser.role === 'muted') { alert('تم كتمك، لا يمكنك الإرسال'); return; }
      await sendMessage(currentRoom, currentUser.email, text);
      msgInput.value='';
    });

    broadcastBtn.addEventListener('click', async () => {
      if (!currentUser) return;
      if (currentUser.role !== 'owner' && currentUser.role !== 'admin') { alert('لا تملك صلاحية البث'); return; }
      const text = prompt('نص البث العام:');
      if (!text) return;
      await sendBroadcast(currentUser.email, text);
    });

    document.getElementById("createPrivateBtn").addEventListener('click', async () => {
      const other = prompt('البريد الإلكتروني للمستخدم الذي تريد محادثته (email):');
      if (!other) return;
      // find user by email -> get UID
      const profilesCol = collection(db, 'profiles');
      const q = query(profilesCol);
      const snap = await getDocs(q);
      let targetUid = null;
      snap.forEach(d => { const data = d.data(); if (data.email === other) targetUid = d.id; });
      if (!targetUid) { alert('المستخدم غير موجود'); return; }
      const roomId = await createPrivateRoom(currentUser.uid, targetUid);
      openRoom(roomId, 'خاص');
    });

    onAuthStateChanged(getAuth(), async (u) => {
      if (!u) { window.location.href = 'login.html'; return; }
      currentUser = await getProfile(u.uid) || { displayName: shortName(u.email), email: u.email, role: 'user', uid: u.uid };
      meName.textContent = currentUser.displayName || shortName(currentUser.email);
      meRole.textContent = 'الرتبة: ' + (currentUser.role || 'مستخدم');
      // show owner actions if owner
      if (currentUser.email === 'your-owner-email@example.com') {
        ownerActionsDiv.style.display='block';
        const btnPromote = document.createElement('button'); btnPromote.textContent='ترقية عضو'; btnPromote.className='small-btn';
        btnPromote.onclick = async ()=>{ const e=prompt('ادخل uid العضو'); const role=prompt('ادخل الرتبة (user, vip, advanced, admin, owner)'); if(e && role) await promoteUser(e, role); alert('تمت الترقية'); };
        ownerActionsDiv.appendChild(btnPromote);
        const btnMute = document.createElement('button'); btnMute.textContent='كتم'; btnMute.className='small-btn';
        btnMute.onclick = async ()=>{ const e=prompt('ادخل uid العضو'); const m=prompt('دقائق الكتم'); if(e && m) await muteUser(e, parseInt(m)); alert('تم الكتم'); };
        ownerActionsDiv.appendChild(btnMute);
        const btnBan = document.createElement('button'); btnBan.textContent='حظر'; btnBan.className='small-btn';
        btnBan.onclick = async ()=>{ const e=prompt('ادخل uid العضو'); if(e) await banUser(e); alert('تم الحظر'); };
        ownerActionsDiv.appendChild(btnBan);
      }

      openRoom('general', 'الدردشة العامة');
    });
  </script>
</body>
</html>