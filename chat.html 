<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>👑 شات الملوك 👑</title>
  <style>
    body {
      margin: 0;
      font-family: "Tajawal", sans-serif;
      background: #000;
      color: gold;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      flex-direction: column;
      overflow: hidden;
    }
    .chat-box {
      width: 95%;
      max-width: 500px;
      background: #111;
      border: 2px solid gold;
      border-radius: 15px;
      box-shadow: 0 0 20px gold;
      display: flex;
      flex-direction: column;
      height: 80vh;
      overflow: hidden;
      position: relative;
    }
    .header {
      background: gold;
      color: black;
      font-weight: bold;
      text-align: center;
      padding: 10px;
      font-size: 20px;
      position: relative;
    }
    .profile-icon {
      position: absolute;
      top: 10px;
      right: 10px;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: radial-gradient(circle, gold 0%, #ffb700 70%, #d4af37 100%);
      box-shadow: 0 0 15px gold;
      cursor: pointer;
      border: 2px solid #fff;
    }
    #messages {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      background: #000;
      color: gold;
    }
    .message {
      margin: 5px 0;
      padding: 5px 10px;
      border-radius: 10px;
      background: #222;
    }
    .message.me {
      background: gold;
      color: black;
      text-align: right;
    }
    .input-area {
      display: flex;
      border-top: 2px solid gold;
    }
    input {
      flex: 1;
      padding: 10px;
      background: transparent;
      color: gold;
      border: none;
      outline: none;
    }
    button {
      background: gold;
      border: none;
      color: black;
      font-weight: bold;
      padding: 10px 15px;
      cursor: pointer;
    }
    .logout-btn {
      background: crimson;
      color: #fff;
      border: none;
      padding: 8px 12px;
      border-radius: 8px;
      font-weight: bold;
      margin-top: 10px;
      cursor: pointer;
    }
    /* نافذة الملف الشخصي */
    .profile-popup {
      display: none;
      position: absolute;
      top: 50px;
      right: 15px;
      background: #111;
      border: 2px solid gold;
      border-radius: 15px;
      box-shadow: 0 0 20px gold;
      padding: 15px;
      width: 250px;
      z-index: 100;
      text-align: center;
    }
    .profile-popup img {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      border: 2px solid gold;
      margin-bottom: 10px;
      object-fit: cover;
    }
    .profile-popup input, 
    .profile-popup select, 
    .profile-popup textarea {
      width: 90%;
      padding: 6px;
      margin: 5px 0;
      border-radius: 10px;
      border: 1px solid #555;
      background: #000;
      color: gold;
      text-align: center;
    }
    .profile-popup button {
      background: gold;
      color: black;
      border: none;
      border-radius: 10px;
      padding: 6px 10px;
      margin-top: 5px;
      cursor: pointer;
      font-weight: bold;
    }
    .alert {
      background: gold;
      color: black;
      padding: 8px 15px;
      border-radius: 10px;
      margin-bottom: 10px;
      font-weight: bold;
      display: none;
    }
  </style>
</head>
<body>

  <div class="chat-box">
    <div class="header">
      👑 شات الملوك 👑
      <div class="profile-icon" id="profileIcon"></div>
    </div>

    <!-- نافذة الملف الشخصي -->
    <div id="profilePopup" class="profile-popup">
      <img id="profileImage" src="default.png" alt="الصورة الشخصية">
      <input type="file" id="imageInput" accept="image/*">
      <input type="text" id="userName" placeholder="الاسم">
      <input type="number" id="userAge" placeholder="العمر">
      <select id="userGender">
        <option value="">الجنس</option>
        <option value="ذكر">ذكر</option>
        <option value="أنثى">أنثى</option>
      </select>
      <textarea id="userBio" placeholder="نبذة قصيرة..."></textarea>
      <button id="saveProfile">💾 حفظ</button>
    </div>

    <div id="alert" class="alert"></div>
    <div id="messages"></div>
    <div class="input-area">
      <input type="text" id="messageInput" placeholder="اكتب رسالتك..." />
      <button id="sendBtn">إرسال</button>
    </div>
  </div>

  <button id="logoutBtn" class="logout-btn">تسجيل الخروج</button>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-app.js";
    import { getFirestore, collection, addDoc, query, orderBy, onSnapshot, serverTimestamp, doc, setDoc, getDoc } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-firestore.js";
    import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-auth.js";
    import { getStorage, ref, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-storage.js";

    // إعداد Firebase
    const firebaseConfig = {
      apiKey: "AIzaSyDJhA1WkFsLZiQz5WZFWPFbdjxLPtG57ss",
      authDomain: "lloo-756f7.firebaseapp.com",
      projectId: "lloo-756f7",
      storageBucket: "lloo-756f7.firebasestorage.app",
      messagingSenderId: "951071688513",
      appId: "1:951071688513:web:46f402720b38f15c5043c0"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    const auth = getAuth(app);
    const storage = getStorage(app);

    const profileIcon = document.getElementById("profileIcon");
    const profilePopup = document.getElementById("profilePopup");
    const imageInput = document.getElementById("imageInput");
    const profileImage = document.getElementById("profileImage");

    // عرض وإخفاء نافذة الملف الشخصي
    profileIcon.addEventListener("click", () => {
      profilePopup.style.display = profilePopup.style.display === "block" ? "none" : "block";
    });

    // حماية الصفحة
    onAuthStateChanged(auth, async (user) => {
      if (!user) {
        alert("يجب تسجيل الدخول أولاً");
        window.location.href = "login.html";
      } else {
        const docRef = doc(db, "users", user.uid);
        const docSnap = await getDoc(docRef);
        if (docSnap.exists()) {
          const data = docSnap.data();
          document.getElementById("userName").value = data.name || "";
          document.getElementById("userAge").value = data.age || "";
          document.getElementById("userGender").value = data.gender || "";
          document.getElementById("userBio").value = data.bio || "";
          if (data.photoURL) profileImage.src = data.photoURL;
        }
        loadMessages(user);
      }
    });

    // رفع الصورة
    imageInput.addEventListener("change", (e) => {
      const file = e.target.files[0];
      if (file) profileImage.src = URL.createObjectURL(file);
    });

    // حفظ الملف الشخصي
    document.getElementById("saveProfile").addEventListener("click", async () => {
      const user = auth.currentUser;
      if (!user) return;
      const name = document.getElementById("userName").value;
      const age = document.getElementById("userAge").value;
      const gender = document.getElementById("userGender").value;
      const bio = document.getElementById("userBio").value;
      let photoURL = profileImage.src;

      if (imageInput.files.length > 0) {
        const file = imageInput.files[0];
        const storageRef = ref(storage, `profiles/${user.uid}.jpg`);
        await uploadBytes(storageRef, file);
        photoURL = await getDownloadURL(storageRef);
      }

      await setDoc(doc(db, "users", user.uid), { name, age, gender, bio, photoURL });
      alert("✅ تم حفظ ملفك الشخصي بنجاح!");
    });

    // دردشة
    const messagesDiv = document.getElementById("messages");
    async function loadMessages(currentUser) {
      const q = query(collection(db, "messages"), orderBy("timestamp", "asc"));
      onSnapshot(q, (snapshot) => {
        messagesDiv.innerHTML = "";
        snapshot.forEach((doc) => {
          const msg = doc.data();
          const div = document.createElement("div");
          div.classList.add("message");
          if (msg.user === currentUser.email) div.classList.add("me");
          div.textContent = `${msg.user.split("@")[0]}: ${msg.text}`;
          messagesDiv.appendChild(div);
        });
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
      });
    }

    // إرسال رسالة
    document.getElementById("sendBtn").addEventListener("click", async () => {
      const text = document.getElementById("messageInput").value.trim();
      const user = auth.currentUser;
      if (!text || !user) return;
      await addDoc(collection(db, "messages"), {
        user: user.email,
        text: text,
        timestamp: serverTimestamp()
      });
      document.getElementById("messageInput").value = "";
    });

    // تسجيل الخروج
    document.getElementById("logoutBtn").addEventListener("click", async () => {
      await signOut(auth);
      window.location.href = "login.html";
    });
  </script>
</body>
</html>